name: 08 - Using variables
on:
  # push:
  workflow_dispatch:

env:
  WORKFLOW_VAR: workflow env variable
  OVERWRITTEN: I will be overwritten
  UNDEFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR || 'default value' }}

jobs:
  echo:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: job env variable
      OVERWRITTEN: I have been overwritten at the job level
    steps:
      - name: Print env vars
        env:
          STEP_VAR: step env variable
          step_var2: Another step var
        run: |
          echo "step env vat: $STEP_VAR"
          echo "step env var 2: $step_var2"
          echo "Job env var: $JOB_VAR"
          echo "workflow env var: $WORKFLOW_VAR"
          echo "Overwritten: $OVERWRITTEN"
      - name: overwrite job variable
        env:
          OVERWRITTEN: I have been overwritten at the step level
        run: "echo step env var: Overwritten: $OVERWRITTEN"
  echo2:
    runs-on: ubuntu-latest
    steps:
      - name: Print variables
        run: |
          echo "Org var: ${{ vars.ORG_VAR }}" # if youre an organisation and have defined ORG_VAR
          echo "Org overwritten var: ${{ vars.OVERWRITTEN_VAR }}" # if youre an organisation and have defined OVERWRITTEN_VAR
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
  echo-prod2:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Print prod variables
        run: |
          echo "Org var: ${{ vars.ORG_VAR }}" # if youre an organisation and have defined ORG_VAR
          echo "Org overwritten var: ${{ vars.OVERWRITTEN_VAR }}" # if youre an organisation and have defined OVERWRITTEN_VAR
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
          echo "Environment var: ${{ vars.TARGET_VAR }}"
  echo-undefined:
    runs-on: ubuntu-latest
    steps:
      - name: Print variables
        run: |
          echo "Org var (undefined): ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}" # if youre an organisation and have defined ORG_VAR
